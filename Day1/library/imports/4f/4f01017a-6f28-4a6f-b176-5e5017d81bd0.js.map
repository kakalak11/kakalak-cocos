{"version":3,"sources":["../../../../../assets/Script/menu script/assets/Script/menu script/signUpForm.js"],"names":["utilities","require","cc","Class","extends","Component","properties","userNameBox","EditBox","passWordBox","confirmBox","emailBox","signUpButton","Button","accounListButton","userNameMessage","Label","passWordMessage","emailMessage","signUpSuccess","Sprite","congratulationLabel","RichText","accountList","Layout","accountListWindow","Node","accountLabelPrefab","Prefab","_userNameChecking","_emailChecking","_passWordChecking","_confirmChecking","_accountList","onUserNameInputBegan","node","active","onUserNameInputEnded","onPassWordInputBegan","onPassWordInputEnded","onEmailInputBegan","onEmailInputEnded","log","string","onConfirmInputBegan","onConfirmInputEnded","_checkUserName","checkStringLength","displayError","userNameCheck","_checkAvailable","displayCorrect","_checkEmail","emailCheck","_checkPassWord","passWordCheck","_checkConfirm","_appendAccount","username","password","email","labelNode","instantiate","addChild","label","getComponent","available","forEach","element","usernameCheck","split","_reset","interactable","onClickSignUp","push","generateRainbowText","onClickSuccess","onClickAccountList","onLoad","start","update","dt"],"mappings":"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","file":"signUpForm.js","sourceRoot":"../../../../../assets/Script/menu script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar utilities = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        userNameBox: cc.EditBox,\n        passWordBox: cc.EditBox,\n        confirmBox: cc.EditBox,\n        emailBox: cc.EditBox,\n        signUpButton: cc.Button,\n        accounListButton: cc.Button,\n        userNameMessage: cc.Label,\n        passWordMessage: cc.Label,\n        emailMessage: cc.Label,\n        signUpSuccess: cc.Sprite,\n        congratulationLabel: cc.RichText,\n        accountList: cc.Layout,\n        accountListWindow: cc.Node,\n        accountLabelPrefab: cc.Prefab,\n        _userNameChecking: null,\n        _emailChecking: null,\n        _passWordChecking: null,\n        _confirmChecking: null,\n        _accountList: [],\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onUserNameInputBegan: function () {\n        this._userNameChecking = false;\n        this.userNameMessage.node.active = false;\n    },\n\n    onUserNameInputEnded: function () {\n        this._userNameChecking = true;\n    },\n\n    onPassWordInputBegan: function () {\n        this._passWordChecking = false;\n        this.passWordMessage.node.active = false;\n    },\n\n    onPassWordInputEnded: function () {\n        this._passWordChecking = true;\n    },\n\n    onEmailInputBegan: function () {\n        this._emailChecking = false;\n        this.emailMessage.node.active = false;\n    },\n\n    onEmailInputEnded: function () {\n        this._emailChecking = true;\n        cc.log(this.emailBox.string);\n\n    },\n\n    onConfirmInputBegan: function () {\n        this._confirmChecking = false;\n        this.passWordMessage.node.active = false;\n    },\n\n    onConfirmInputEnded: function () {\n        this._confirmChecking = true;\n    },\n\n    _checkUserName: function () {\n        if (!this._userNameChecking) return;\n        if (!this.userNameBox.string) return;\n        if (!utilities.checkStringLength(this.userNameBox.string, 6)) {\n            utilities.displayError(this.userNameMessage, '//username must have at least 6 characters')\n            return false;\n        }\n\n        if (!utilities.userNameCheck(this.userNameBox.string)) {\n            utilities.displayError(this.userNameMessage, '//username must not contain special characters')\n            return false;\n        }\n\n        if (!this._checkAvailable(this.userNameBox.string)) {\n            utilities.displayError(this.userNameMessage, '//username is not available, please choose another username');\n            return false;\n        };\n        utilities.displayCorrect(this.userNameMessage, '//this username is available');\n        return true;\n    },\n\n    _checkEmail: function () {\n        if (!this._emailChecking) return;\n        if (!this.emailBox.string) return;\n        if (!utilities.emailCheck(this.emailBox.string)) {\n            utilities.displayError(this.emailMessage, '//please input correct email format');\n            return false;\n        }\n\n        utilities.displayCorrect(this.emailMessage, '//you can use this email address');\n        return true;\n    },\n\n    _checkPassWord: function () {\n        if (!this._passWordChecking) return;\n        if (!this.passWordBox.string) return;\n        if (!utilities.checkStringLength(this.passWordBox.string, 8)) {\n            utilities.displayError(this.passWordMessage, '//password must have at least 8 characters');\n            return false;\n        }\n        if (!utilities.passWordCheck(this.passWordBox.string)) {\n            utilities.displayError(this.passWordMessage, '//password must have at least 1 capital letter and 1 normal letter');\n            return false;\n        }\n\n        utilities.displayCorrect(this.passWordMessage, '//you can use this password');\n        return true;\n    },\n\n    _checkConfirm: function () {\n        if (!this.passWordBox.string) return;\n        if (!this._confirmChecking) return;\n        if (!this.confirmBox.string) return;\n        if (this.confirmBox.string !== this.passWordBox.string) {\n            utilities.displayError(this.passWordMessage, `//the 2 passwords don't match`);\n            return false;\n        }\n\n        utilities.displayCorrect(this.passWordMessage, '//passwords matched !!!');\n        return true;\n    },\n\n    _appendAccount: function (username, password, email) {\n        let labelNode = cc.instantiate(this.accountLabelPrefab);\n        this.accountList.node.addChild(labelNode);\n        let label = labelNode.getComponent('cc.Label');\n        label.string = username + ' : ' + password + ' : ' + email;\n    },\n\n    _checkAvailable: function (username) {\n        let available = true;\n        this._accountList.forEach(function (element) {\n            let usernameCheck = element.split(':')[0];\n            if (usernameCheck === username) available = false;\n        });\n        if (available) return true;\n        return false;\n    },\n\n    _reset: function () {\n        this.userNameBox.string = '';\n        this.passWordBox.string = '';\n        this.confirmBox.string = '';\n        this.emailBox.string = '';\n        this.passWordMessage.node.active = false;\n        this.userNameMessage.node.active = false;\n        this.emailMessage.node.active = false;\n        this._userNameChecking = null;\n        this._passWordChecking = null;\n        this._emailChecking = null;\n        this._confirmChecking = null;\n        this.signUpSuccess.node.active = true;\n        this.signUpButton.interactable = false;\n    },\n\n    onClickSignUp: function () {\n        this._accountList.push(this.userNameBox.string + \":\" + this.passWordBox.string + ':' + this.emailBox.string);\n        this._appendAccount(this.userNameBox.string, this.passWordBox.string, this.emailBox.string);\n        this.congratulationLabel.string = utilities.generateRainbowText(`Welcome ${this.userNameBox.string} ! You have successfully signed up your account`.split(''));\n        this._reset();\n        cc.log(this._accountList);\n    },\n\n    onClickSuccess: function () {\n        this.signUpSuccess.node.active = false;\n    },\n\n    onClickAccountList: function () {\n        if (!this.accountListWindow.active) {\n            this.accountListWindow.active = true;\n            return;\n        }\n        this.accountListWindow.active = false;\n    },\n\n    onLoad() {\n        this._accountList.push('kakalak:123456');\n        cc.log(this._accountList);\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        if (!this._checkUserName() || !this._checkEmail() || !this._checkPassWord() || !this._checkConfirm()) {\n            return;\n        }\n        this.signUpButton.interactable = true;\n    },\n});\n\n"]}