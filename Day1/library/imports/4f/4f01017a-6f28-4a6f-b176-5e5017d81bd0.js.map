{"version":3,"sources":["../../../../../assets/Script/menu script/assets/Script/menu script/signUpForm.js"],"names":["utilities","require","cc","Class","extends","Component","properties","userNameBox","EditBox","passWordBox","confirmBox","signUpButton","Button","accounListButton","userNameError","Label","passWordError","signUpSuccess","Sprite","accountList","Layout","accountListWindow","Node","accountLabelPrefab","Prefab","_userNameChecking","_passWordChecking","_confirmChecking","_accountList","onUserNameInputBegan","node","color","Color","RED","active","onUserNameInputEnded","onPassWordInputBegan","onPassWordInputEnded","onConfirmInputBegan","onConfirmInputEnded","_checkUserName","string","length","userNameCheck","_checkAvailable","GREEN","_checkPassWord","passWordCheck","_checkConfirm","_appendAccount","username","password","labelNode","instantiate","addChild","label","getComponent","available","forEach","element","usernameCheck","split","_reset","interactable","onClickSignUp","push","log","onClickSuccess","onClickAccountList","onLoad","start","update","dt"],"mappings":"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","file":"signUpForm.js","sourceRoot":"../../../../../assets/Script/menu script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar utilities = require('utils');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        userNameBox: cc.EditBox,\n        passWordBox: cc.EditBox,\n        confirmBox: cc.EditBox,\n        signUpButton: cc.Button,\n        accounListButton: cc.Button,\n        userNameError: cc.Label,\n        passWordError: cc.Label,\n        signUpSuccess: cc.Sprite,\n        accountList: cc.Layout,\n        accountListWindow: cc.Node,\n        accountLabelPrefab: cc.Prefab,\n        _userNameChecking: null,\n        _passWordChecking: null,\n        _confirmChecking: null,\n        _accountList: [],\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onUserNameInputBegan: function () {\n        this._userNameChecking = false;\n        this.userNameError.node.color = cc.Color.RED;\n        this.userNameError.node.active = false;\n    },\n\n    onUserNameInputEnded: function () {\n        this._userNameChecking = true;\n    },\n\n    onPassWordInputBegan: function () {\n        this._passWordChecking = false;\n        this.passWordError.node.active = false;\n    },\n\n    onPassWordInputEnded: function () {\n        this._passWordChecking = true;\n    },\n\n    onConfirmInputBegan: function () {\n        this._confirmChecking = false;\n        this.passWordError.node.color = cc.Color.RED;\n        this.passWordError.node.active = false;\n    },\n\n    onConfirmInputEnded: function () {\n        this._confirmChecking = true;\n    },\n\n    _checkUserName: function () {\n        if (!this._userNameChecking) return;\n        if (!this.userNameBox.string) return;\n        if (this.userNameBox.string.length < 6) {\n            this.userNameError.node.active = true;\n            this.userNameError.string = '//username must have at least 8 characters';\n            return false;\n        }\n\n        if (!utilities.userNameCheck(this.userNameBox.string)) {\n            this.userNameError.node.active = true;\n            this.userNameError.string = '//username must not contain special characters';\n            return false;\n        }\n\n        if (!this._checkAvailable(this.userNameBox.string)) {\n            this.userNameError.node.active = true;\n            this.userNameError.string = '//username is not available, please choose another username';\n            return false;\n        };\n\n        this.userNameError.node.active = true;\n        this.userNameError.node.color = cc.Color.GREEN;\n        this.userNameError.string = '//this username is available';\n        return true;\n    },\n\n    _checkPassWord: function () {\n        if (!this._passWordChecking) return;\n        if (!this.passWordBox.string) return;\n        if (this.passWordBox.string.length < 8) {\n            this.passWordError.node.active = true;\n            this.passWordError.string = '//password must have at least 8 characters';\n            return false;\n        }\n\n        if (!utilities.passWordCheck(this.passWordBox.string)) {\n            this.passWordError.node.active = true;\n            this.passWordError.string = '//password must have at least 1 capital letter and 1 normal letter';\n            return false;\n        }\n\n\n        return true;\n    },\n\n    _checkConfirm: function () {\n        if (!this.passWordBox.string) return;\n        if (!this._confirmChecking) return;\n        if (!this.confirmBox.string) return;\n        if (this.confirmBox.string !== this.passWordBox.string) {\n            this.passWordError.node.active = true;\n            this.passWordError.string = `//the 2 passwords don't match`;\n            return false;\n        }\n\n        this.passWordError.node.active = true;\n        this.passWordError.node.color = cc.Color.GREEN;\n        this.passWordError.string = `//password match !`;\n        return true;\n    },\n\n    _appendAccount: function (username, password) {\n        let labelNode = cc.instantiate(this.accountLabelPrefab);\n        this.accountList.node.addChild(labelNode);\n        let label = labelNode.getComponent('cc.Label');\n        label.string = username + ' : ' + password;\n    },\n\n    _checkAvailable: function (username) {\n        let available = true;\n        this._accountList.forEach(function (element) {\n            let usernameCheck = element.split(':')[0];\n            if (usernameCheck === username) available = false;\n        });\n\n        if (available) return true;\n        return false;\n    },\n\n    _reset: function () {\n        this.userNameBox.string = '';\n        this.passWordBox.string = '';\n        this.confirmBox.string = '';\n        this.passWordError.node.active = false;\n        this.userNameError.node.active = false;\n        this._userNameChecking = null;\n        this._passWordChecking = null;\n        this._confirmChecking = null;\n        this.signUpSuccess.node.active = true;\n        this.signUpButton.interactable = false;\n    },\n\n    onClickSignUp: function () {\n        this._accountList.push(this.userNameBox.string + \":\" + this.passWordBox.string);\n        this._appendAccount(this.userNameBox.string, this.passWordBox.string);\n        this._reset();\n        cc.log(this._accountList);\n    },\n\n    onClickSuccess: function () {\n        this.signUpSuccess.node.active = false;\n    },\n\n    onClickAccountList: function () {\n        if (!this.accountListWindow.active) {\n            this.accountListWindow.active = true;\n            return;\n        }\n        this.accountListWindow.active = false;\n    },\n\n    onLoad() {\n        this._accountList.push('kakalak:123456');\n        cc.log(this._accountList);\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        if (!this._checkUserName() || !this._checkPassWord() || !this._checkConfirm()) {\n            return;\n        }\n        this.signUpButton.interactable = true;\n    },\n});\n\n"]}