{"version":3,"sources":["../../../../assets/Script/assets/Script/utils.js"],"names":["console","log","primeNumber","number","array","Array","fill","primeArray","i","push","j","utilities","check","passWordCheck","password","passwordArray","split","countUpper","countLower","isUpperCase","isLowerCase","cc","forEach","parseInt","element","toUpperCase","toLowerCase","userNameCheck","username","spChars","test","module","exports"],"mappings":";;;;;;AAAAA,QAAQC,GAAR,CAAY,aAAZ;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AACzB,QAAIC,QAAQC,MAAMF,MAAN,EAAcG,IAAd,CAAmB,IAAnB,CAAZ;AACA,QAAIC,aAAa,EAAjB;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,MAApB,EAA4BK,GAA5B,EAAiC;AAC7B,YAAIJ,MAAMI,CAAN,MAAa,IAAjB,EAAuB;AACnBD,uBAAWE,IAAX,CAAgBD,CAAhB;AACA,iBAAK,IAAIE,IAAIF,IAAIA,CAAjB,EAAoBE,IAAIP,MAAxB,EAAgCO,KAAKF,CAArC,EAAwC;AACpCJ,sBAAMM,CAAN,IAAW,CAAX;AACH;AACJ;AACJ;AACD,WAAOH,UAAP;AACH;;AAED,IAAII,YAAY;AACZC,WAAO;AAAA,eAAMZ,QAAQC,GAAR,CAAY,mBAAZ,CAAN;AAAA,KADK;AAEZY,mBAAe,uBAAUC,QAAV,EAAoB;AAC/B,YAAIC,gBAAgBD,SAASE,KAAT,CAAe,EAAf,CAApB;AACA,YAAIC,aAAa,CAAjB;AACA,YAAIC,aAAa,CAAjB;;AAEA,YAAI,CAACC,YAAYJ,aAAZ,CAAD,IAA+B,CAACK,YAAYL,aAAZ,CAApC,EAAgE;AAC5DM,eAAGpB,GAAH,CAAO,sEAAP;AACA,mBAAO,KAAP;AACH;;AAED,iBAASkB,WAAT,CAAqBL,QAArB,EAA+B;AAC3BA,qBAASQ,OAAT,CAAiB,mBAAW;AACxB,oBAAIC,SAASC,OAAT,CAAJ,EAAuB;AACvB,oBAAIA,YAAYA,QAAQC,WAAR,EAAhB,EAAuCR;AAC1C,aAHD;AAIA,gBAAIA,UAAJ,EAAgB,OAAO,IAAP,CAAhB,KACK,OAAO,KAAP;AACR;;AAED,iBAASG,WAAT,CAAqBN,QAArB,EAA+B;AAC3BA,qBAASQ,OAAT,CAAiB,mBAAW;AACxB,oBAAIC,SAASC,OAAT,CAAJ,EAAuB;AACvB,oBAAIA,YAAYA,QAAQE,WAAR,EAAhB,EAAuCR;AAC1C,aAHD;AAIA,gBAAIA,UAAJ,EAAgB,OAAO,IAAP,CAAhB,KACK,OAAO,KAAP;AACR;;AAED,eAAO,IAAP;AACH,KA/BW;AAgCZS,mBAAe,uBAAUC,QAAV,EAAoB;AAC/B;AACA;;AAEA,YAAIC,UAAU,wCAAd;AACA,YAAIA,QAAQC,IAAR,CAAaF,QAAb,CAAJ,EAA4B;AACxB,mBAAO,KAAP;AACH;AACD,eAAO,IAAP;AACH;AAzCW,CAAhB;;AA4CAG,OAAOC,OAAP,GAAiBrB,SAAjB","file":"utils.js","sourceRoot":"../../../../assets/Script","sourcesContent":["console.log('Hello world');\n\nfunction primeNumber(number) {\n    let array = Array(number).fill(true);\n    let primeArray = [];\n\n    for (let i = 2; i < number; i++) {\n        if (array[i] === true) {\n            primeArray.push(i);\n            for (let j = i * i; j < number; j += i) {\n                array[j] = 0\n            }\n        }\n    }\n    return primeArray;\n}\n\nvar utilities = {\n    check: () => console.log('utilities has run'),\n    passWordCheck: function (password) {\n        let passwordArray = password.split('');\n        let countUpper = 0;\n        let countLower = 0;\n\n        if (!isUpperCase(passwordArray) || !isLowerCase(passwordArray)) {\n            cc.log('password needs to have at least 1 capital letter and 1 normal letter');\n            return false;\n        }\n\n        function isUpperCase(password) {\n            password.forEach(element => {\n                if (parseInt(element)) return;\n                if (element === element.toUpperCase()) countUpper++;\n            });\n            if (countUpper) return true;\n            else return false;\n        }\n\n        function isLowerCase(password) {\n            password.forEach(element => {\n                if (parseInt(element)) return;\n                if (element === element.toLowerCase()) countLower++;\n            });\n            if (countLower) return true;\n            else return false;\n        }\n\n        return true;\n    },\n    userNameCheck: function (username) {\n        // let userNameArray = username.split('');\n        // let countSpecialLetter = 0\n\n        let spChars = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\n        if (spChars.test(username)) {\n            return false;\n        }\n        return true;\n    }\n}\n\nmodule.exports = utilities;"]}